{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","Pages/Emotion.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","emotiontxt","signal","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","_useState9","_useState10","showEmotion","setTextBtn","_useState11","_useState12","emotionIndex","setEmotionIndex","_useState13","_useState14","displayEmotion","setDisplay","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","emotion","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","value","_jsx","Provider","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","config","_yield$axios$post","data","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","console","log","setItem","stringify","t0","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","pic","setPic","picLoading","setPicLoading","description","response","message","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","v","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","blazeface","require","Emotion","webcamRef","useRef","canvasRef","condition","loadModel","model","face_model","interval","tf","load","setInterval","emotionDetection","clearInterval","indexOfMax","arr","max","maxIndex","predEmotion","x","y","gray_frame","resized","expandedTo","pred","resizeBilinear","expandDims","predict","dataSync","_x4","_x5","_x6","grayFrame","video","img","fromPixels","rgbToGrayscale","videoWidth","videoHeight","face_detector","current","readyState","estimateFaces","forEach","topLeft","bottomRight","_x7","_x8","Webcam","ref","muted","visibility","zindex","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.d09533a5.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signal } from \"@preact/signals-react\";\r\n\r\nconst ChatContext = createContext();\r\nconst emotiontxt = signal()\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n  const [showEmotion, setTextBtn] = useState('Show my emotion')\r\n  const [emotionIndex, setEmotionIndex] = useState()\r\n  // const [emotiontxt, setEmotion] = useState()\r\n  \r\n  const [displayEmotion, setDisplay] = useState()\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history]);\r\n  let emotion_dict = {0: \"Angry\", 1: \"Disgusted\", 2: \"Fearful\", 3: \"Happy\", 4: \"Neutral\", 5: \"Sad\", 6: \"Surprised\"};\r\n\r\n  const emotion = async () => {\r\n    if (showEmotion === \"Show my emotion\") {\r\n      setTextBtn(\"Don't Show Emotions\")\r\n    }\r\n    else {\r\n      setTextBtn(\"Show my emotion\")\r\n    }\r\n  }\r\n  emotiontxt.value = emotion_dict[emotionIndex]\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n        emotion,\r\n        showEmotion,\r\n        setTextBtn,\r\n        setEmotionIndex,\r\n        emotiontxt,\r\n        setDisplay,\r\n        displayEmotion,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const { setUser } = ChatState();\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      console.log(\"HI\")\r\n      // toast({\r\n      //   title: \"Login Successful\",\r\n      //   status: \"success\",\r\n      //   duration: 5000,\r\n      //   isClosable: true,\r\n      //   position: \"bottom\",\r\n      // });\r\n      setUser(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      // toast({\r\n      //   title: \"Error Occured!\",\r\n      //   description: error.response.data.message,\r\n      //   status: \"error\",\r\n      //   duration: 5000,\r\n      //   isClosable: true,\r\n      //   position: \"bottom\",\r\n      // });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"10px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter password\"\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(name, email, password, pic);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          pic,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"mern_chat_app\");\r\n      data.append(\"cloud_name\", \"dccrkvgce \");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dccrkvgce/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import {\r\n  Box,\r\n  Container,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\n\r\nfunction Homepage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\r\n          Chatify\r\n        </Text>\r\n      </Box>\r\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs isFitted variant=\"soft-rounded\">\r\n          <TabList mb=\"1em\">\r\n            <Tab>Login</Tab>\r\n            <Tab>Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification, emotiontxt, setDisplay, showEmotion } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        \r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  const sendEmotion = () => {\r\n    socket.emit(\"send emotion\", {id: selectedChat._id, data: emotiontxt.v })\r\n  }\r\n  useEffect(() => {\r\n    if (showEmotion === \"Don't Show Emotions\") {\r\n      sendEmotion()\r\n    }\r\n    socket.on(\"message recieved\", newMessageRecieved => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n        // setDisplay(data.e)\r\n        // console.log(data.e)\r\n      }\r\n    });\r\n    socket.on(\"emotion recieved\", (emotion) => {\r\n      setDisplay(emotion)\r\n    })\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n  console.log(emotiontxt.v)\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {istyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    // height={50}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        // to get socket.io on same page\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n  // console.log(i === messages.length - 1);\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n\r\nexport const getSender = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  IconButton,\r\n  Text,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n      )}\r\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent h=\"410px\">\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work sans\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst UserListItem = ({ handleFunction }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/rename`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data._id);\r\n      // setSelectedChat(\"\");\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupadd`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupremove`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst GroupChatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = ChatState();\r\n\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `/api/chat/group`,\r\n        {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n        config\r\n      );\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New Group Chat Created!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to Create the Chat!\",\r\n        description: error.response.data,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  handleFunction={() => handleDelete(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            {loading ? (\r\n              // <ChatLoading />\r\n              <div>Loading...</div>\r\n            ) : (\r\n              searchResult\r\n                ?.slice(0, 4)\r\n                .map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleGroup(user)}\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupChatModal;\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport NotificationBadge from \"react-notification-badge\";\r\nimport { Effect } from \"react-notification-badge\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nfunction SideDrawer() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n  \r\n  const {\r\n    setSelectedChat,\r\n    user,\r\n    notification,\r\n    setNotification,\r\n    chats,\r\n    setChats,\r\n    emotion,\r\n    showEmotion,\r\n    displayEmotion,\r\n  } = ChatState();\r\n\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    console.log(userId);\r\n\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}>\r\n            <i className=\"fas fa-search\"></i>\r\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n        <Button colorScheme='blue' onClick={emotion}>{showEmotion}</Button>\r\n        <Text fontFamily=\"Work sans\">{displayEmotion}</Text>\r\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\r\n          Chatify\r\n        </Text>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <NotificationBadge\r\n                count={notification.length}\r\n                effect={Effect.SCALE}\r\n              />\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setSelectedChat(notif.chat);\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModal user={user}>\r\n                <MenuItem>My Profile</MenuItem>{\" \"}\r\n              </ProfileModal>\r\n              <MenuDivider />\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import { Box } from \"@chakra-ui/layout\"\r\nimport { useState } from \"react\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatpage = () => {\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />}\r\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;\r\n","import React, { useRef, useEffect } from 'react'\r\nimport Webcam from 'react-webcam'\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport * as tf from '@tensorflow/tfjs'\r\nconst blazeface = require(\"@tensorflow-models/blazeface\");\r\n\r\nfunction Emotion() {\r\n    const {\r\n        showEmotion,\r\n        setTextBtn,\r\n        setEmotionIndex,\r\n    } = ChatState();\r\n    \r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const condition = (showEmotion === 'Show my emotion')\r\n   \r\n\r\n    const loadModel = async () => {\r\n        // Load the Keras model using TensorFlow.js\r\n        const model_URL = 'https://tensorflowmodelandweight.blob.core.windows.net/model/model/tsjsModel/model.json'\r\n        const weight_URL = 'https://tensorflowmodelandweight.blob.core.windows.net/weight/weights/tsjsWeight/model.json'\r\n        try {\r\n            const model = await tf.loadLayersModel(model_URL, weight_URL);\r\n            const face_model = await blazeface.load()\r\n            \r\n            console.log(condition)\r\n            const interval = setInterval(() => {emotionDetection(model, face_model)}, 16.7)\r\n            if (condition) {\r\n                clearInterval(interval)\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n            setTextBtn(\"Show my emotion\")\r\n        } \r\n    }\r\n    function indexOfMax(arr) {\r\n        if (arr.length === 0) {\r\n            return -1; // Return -1 for an empty array\r\n        }\r\n\r\n        let max = arr[0];\r\n        let maxIndex = 0;\r\n\r\n        for (let i = 1; i < arr.length; i++) {\r\n            if (arr[i] > max) {\r\n            max = arr[i];\r\n            maxIndex = i;\r\n            }\r\n        }\r\n\r\n        return maxIndex;\r\n    }\r\n    const predEmotion = async (x, y, w, h, gray_frame, model) => {\r\n        // const casted = gray_frame.cast('int32')\r\n        // console.log(casted.shape)\r\n        // const roi_gray_frame = casted.slice([y, x], [h, w])\r\n        const resized = tf.image.resizeBilinear (gray_frame, [48,48])\r\n        const expandedTo = resized.expandDims(0)\r\n        // const expanded = expandedTo.expandDims(-1)\r\n        const pred = model.predict(expandedTo)\r\n        const arr = pred.dataSync()\r\n        setEmotionIndex(indexOfMax(arr))\r\n\r\n        tf.dispose(resized)\r\n        // tf.dispose(casted)\r\n        tf.dispose(expandedTo)\r\n        // tf.dispose(roi_gray_frame)\r\n    }\r\n    const grayFrame = (video) => {\r\n        const img = tf.browser.fromPixels(video)\r\n        const grayscaleImage = tf.image.rgbToGrayscale(img);\r\n        return grayscaleImage\r\n    }\r\n\r\n    const emotionDetection = async (model, face_model) => {\r\n        console.log(\"yes\")\r\n        if (\r\n            typeof webcamRef.current !== \"undefined\" &&\r\n            webcamRef.current !== null &&\r\n            webcamRef.current.video.readyState === 4\r\n        ) {\r\n            // Get Video Properties\r\n            const video = webcamRef.current.video;\r\n            const videoWidth = webcamRef.current.video.videoWidth;\r\n            const videoHeight = webcamRef.current.video.videoHeight;\r\n            // Set video width\r\n            webcamRef.current.video.width = videoWidth;\r\n            webcamRef.current.video.height = videoHeight;\r\n            tf.setBackend('cpu')\r\n            // Set canvas height and width\r\n            canvasRef.current.width = videoWidth;\r\n            canvasRef.current.height = videoHeight;\r\n            \r\n            \r\n            // const casted = resized.cast('int32')\r\n            const gray_frame = grayFrame(video)\r\n            const face_detector = await face_model.estimateFaces(video, false)\r\n            face_detector.forEach((pred) => {\r\n                const x = pred.topLeft[0]\r\n                const y = pred.topLeft[1]\r\n                const w = pred.bottomRight[0] - pred.topLeft[0]\r\n                const h = pred.bottomRight[1] - pred.topLeft[1]\r\n                predEmotion(x,y,w,h,gray_frame,model)\r\n            })            \r\n            tf.dispose(face_detector)\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n         loadModel()\r\n    },[,showEmotion])\r\n\r\n    if (condition) {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <Webcam\r\n          ref={webcamRef}\r\n          muted={true} \r\n          style={{\r\n              visibility: \"hidden\",\r\n              position: \"absolute\",\r\n              zindex: \"-1\", \r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n             visibility: \"hidden\",\r\n              position: \"absolute\",\r\n              zindex: \"-1\",\r\n          }}\r\n        />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Emotion","import \"./App.css\";\r\nimport Homepage from \"./Pages/Homepage\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Chatpage from \"./Pages/Chatpage\";\r\nimport Emotion from \"./Pages/Emotion\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route path=\"/\" component={Homepage} exact />\r\n      <Route path=\"/chats\" component={Chatpage} />\r\n      <Emotion/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport ChatProvider from \"./Context/ChatProvider\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <BrowserRouter>\r\n      <ChatProvider>\r\n        <App />\r\n      </ChatProvider>\r\n    </BrowserRouter>\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}